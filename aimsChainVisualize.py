#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Creates an animated gif of the NEB from aimsChain

Use Jmol to create images from a multi molecule xyz file.
Use Imagemagick to convert the generated .jpg's
and then use it again to convert the gifs for each iteration
into one long gif.

Usage: run this script from within the paths folder generated by aimsChain
Requirements: Jmol 11.7 and later, Imagemagick
"""

import os
import subprocess

def makeScript():
  ''' Creates the jmol script file.'''

  with open('movie.jmol', 'w') as script:
    script.write('''frame 1 \n'''
                 '''num_frames = getProperty("modelInfo.modelCount")\n'''
                 '''for (var i = 1; i <= num_frames; i = i+1)\n'''
                 '''  var filename = "movie"+("00000"+i)[-4][0]+".jpg"\n'''
                 '''  write IMAGE 800 600 JPG @filename\n'''  
                 '''  frame next\n'''  
                 '''end for''')


main_dir = os.getcwd() #the root directory with all the iteration folders

#Walk through the directories and collect run the xyz files into a master xyz
# file. Run Jmol and ImageMagick to create the gif.
for foldername, subfolders, filenames in os.walk('.'):
    with open('total_path.xyz', 'a') as total_path_file:
        for folder in subfolders:
            os.chdir(folder)
            with open('path.xyz', 'r') as path_file:
                path_contents = path_file.read()
            os.chdir(main_dir)
            total_path_file.write(path_contents)

# Use the xyz file to make a bunch of jpgs and then convert that to a gif.
makeScript()
subprocess.call(["jmol", "total_path.xyz -x -J movie.jmol"])
subprocess.call("convert *.jpg " + "combined.gif", shell=True)

# Clean up
os.remove('./movie.jmol')
os.remove('./total_path.xyz')
subprocess.call("rm *.jpg", shell=True)
